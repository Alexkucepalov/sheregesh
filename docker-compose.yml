version: '3.9'

services:
  web:
    build: ./backend
    image: gesh-web:latest
    command: >
      sh -c "
      python manage.py makemigrations --noinput &&
      python manage.py migrate --noinput &&
      python manage.py runserver 0.0.0.0:8000
      "
    ports:
      - '8000:8000'
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - ./backend/media:/home/app/web/media/
    depends_on:
      postgres:
        condition: service_healthy

  celery:
    image: gesh-web:latest
    command: celery -A sheregesh worker  --autoscale=10,3 -l info
    env_file:
      - .env
    volumes:
      - ./backend/media:/home/app/web/media/
    depends_on:
      redis:
        condition: service_started
      web:
        condition: service_started

  redis:
    container_name: redis
    image: redis
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 3
      start_period: 10s

  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    command: celery flower --broker=redis://redis:6379/0
    depends_on:
      celery:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0


volumes:
  postgres_data:
  redis_data:
